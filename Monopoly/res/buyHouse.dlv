buyHouse(X, C) | noBuyHouse(X) :- property(X, C).

% MASSIMIZZO AL LIVELLO DUE IL GUADAGNO COMPLESSIVO DATO DALLE CASE CHE COMPRO E MINIMIZZO AL LIVELLO 1 IL NUMERO DI CASE COMPRATE
% TODO MO VEDIAMO
:~ buyHouse(X, C). [C @ 1, X]

% per massimizzare il nuovo affitto delle case che dovrei comprare, minimizzo quello delle case che non compro
:~ #sum{A, X : noBuyHouse(X), newRent(X, A)} = T. [T @ 2]

% rende il programma incoerente se non sono state comprate case
boughtHouses :- buyHouse(_, _).
:- not boughtHouses.

% non posso comprare case se supero la metà del budget
:- moneyBound(M), C = #sum{V, X : buyHouse(X, V)}, C > M.

% soldi a disposizione. Alla prima iterazione vale Money / 2, alle iterazioni succesive vale quanto prima meno quello che ho speso.
moneyBound(0).

% il secondo attributo è il costo della costruzione della casa
property(1, 50).
newRent(1, 100).
property(2, 250).
newRent(2, 200).